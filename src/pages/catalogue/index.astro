---
import Oeuvre from "../../components/catalogue/oeuvre/Oeuvre.compact.astro";
import {
	getCatalogue,
	getItemsByYear,
	getString,
	pluralize,
} from "../../helpers";
import Layout from "../../layouts/Layout.astro";
import Instruments from "../../components/catalogue/Instruments.astro";
import Categories from "../../components/catalogue/Categories.astro";
import SubgridLayout from "../../components/layouts/SubgridLayout.astro";
import PageLayout from "../../components/layouts/PageLayout.astro";
import type { OeuvreWithId } from "../../types";
import Editeurs from "../../components/catalogue/Editeurs.astro";
import Search from "../../components/catalogue/Search.astro";

const catalogue = getCatalogue();
const catalogueByYear = getItemsByYear<OeuvreWithId>(catalogue);
---

<script>
	console.log("search script ready");
	// Find our component DOM on the page.
	const searchField = document.getElementById(
		"searchInput"
	) as HTMLInputElement | null;

	if (searchField) {
		// Add event listeners to fire confetti when a button is clicked.
		searchField.addEventListener("input", (e) => {
			const value = searchField.value;
			const oeuvres =
				document.querySelectorAll<HTMLDivElement>(`.catalogue-oeuvre`);

			oeuvres.forEach((oeuvre) => {
				if (!value || value === "") {
					oeuvre.classList.add("visible");
					oeuvre.classList.remove("hidden");
				} else {
					const titre = oeuvre.dataset.titre;
					const hasMatch = titre
						?.toLowerCase()
						.includes(value.toLowerCase());
					if (hasMatch) {
						oeuvre.classList.remove("hidden");
						oeuvre.classList.add("visible");
					} else {
						oeuvre.classList.remove("visible");
						oeuvre.classList.add("hidden");
					}
				}
			});
		});
	}
</script>

<Layout title={getString("catalogue")?.t}>
	<PageLayout sectionId="catalogue" hasSidebar={true}>
		<h2
			slot="page-heading"
			style={`view-transition-name: heading-catalogue`}
		>
			Catalogue
			<span class="heading-metadata"
				>({catalogue.length}
				{pluralize("oeuvre", catalogue.length)})</span
			>
		</h2>
		{
			catalogueByYear.map(({ year, items }) => {
				return (
					<SubgridLayout slot="page-content">
						<h4 class="year-title" slot="col1">
							<span>{year}</span>
						</h4>
						<div class="feed-items" slot="main">
							{items.map((oeuvre) => (
								<Oeuvre id={oeuvre.id} />
							))}
						</div>
					</SubgridLayout>
				);
			})
		}
		<Search slot="page-sidebar" />
		<Categories slot="page-sidebar" />
		<Instruments slot="page-sidebar" />
		<Editeurs slot="page-sidebar" />
	</PageLayout>
</Layout>
