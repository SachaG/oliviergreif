---
import Oeuvre from "../../../components/catalogue/Oeuvre.compact.astro";
import {
	capitalizeFirstLetter,
	getInstruments,
	getItemsStaticPaths,
	OTHER_INSTRUMENTS,
} from "../../../helpers";
import { convertTitle, pluralize } from "../../../helpers";
import { getCatalogue } from "../../../helpers";
import Layout from "../../../layouts/Layout.astro";
import type { WithId } from "../../../types";
import Instruments from "../../../components/catalogue/Instruments.astro";
import SubgridLayout from "../../../components/SubgridLayout.astro";
import { otherInstruments } from "../../../helpers";

const { id: currentInstrumentId } = Astro.params;

export function getStaticPaths() {
	return getItemsStaticPaths(
		[...getInstruments(), OTHER_INSTRUMENTS].map(
			(instrument) => ({ id: convertTitle(instrument) }) as WithId,
		),
	);
}

const catalogue = getCatalogue({ instrumentId: currentInstrumentId });
const instruments = getInstruments();
const isOtherInstruments =
	currentInstrumentId === convertTitle(OTHER_INSTRUMENTS);
const title = isOtherInstruments
	? OTHER_INSTRUMENTS
	: instruments.find((i) => convertTitle(i) === currentInstrumentId) || "";
const maxNumberOfInstruments = Math.max(
	...catalogue.map((o) => o.instruments?.length || 0),
);
const catalogueByNumberOfInstruments = [...Array(maxNumberOfInstruments)]
	.map((x, count) => ({
		count: count + 1,
		items: catalogue.filter((o) => o.instruments?.length === count + 1),
	}))
	.filter(({ items }) => items.length > 0);
---

<Layout title={`Catalogue (${title})`}>
	<div>
		<h2>
			Catalogue: {capitalizeFirstLetter(title)} ({catalogue.length}
			{pluralize("œuvre", catalogue.length)})
		</h2>
		{
			isOtherInstruments && (
				<h4>
					{otherInstruments.map(capitalizeFirstLetter).join(", ")}
				</h4>
			)
		}
	</div>
	<div class="grid">
		<main>
			{
				catalogueByNumberOfInstruments.map(({ count, items }) => (
					<SubgridLayout>
						<h4 class="count-title" slot="col1">
							<span>
								{count} {pluralize("instrument", count)}{" "}
								<span>
									({items.length}{" "}
									{pluralize("œuvre", items.length)})
								</span>
							</span>
						</h4>
						<div class="items" slot="main">
							{items.map((oeuvre) => (
								<Oeuvre id={oeuvre.id} />
							))}
						</div>
					</SubgridLayout>
				))
			}
		</main>
		<section class="sidebar">
			<div class="sidebar-contents">
				<Instruments currentInstrumentId={currentInstrumentId} />
			</div>
		</section>
	</div>
</Layout>

<style type="text/scss">
	.count-title {
		position: sticky;
		top: 0px;
		font-size: 2rem;
	}
</style>
