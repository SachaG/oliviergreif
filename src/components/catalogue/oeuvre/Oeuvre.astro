---
import { getOeuvre } from "../../../content";
import {
	convertTitle,
	getConcerts,
	getDisques,
	getEditeur,
	getPath,
	SectionId,
	getEditeurByTitle,
} from "../../../content";
import { getItemIdFromSlug } from "../../../helpers";
import Field from "../../Field.astro";
import PageLayout from "../../layouts/PageLayout.astro";
import SidebarBlock from "../../SidebarBlock.astro";
import T from "../../T.astro";
import Instruments from "./Instruments.astro";
const { id } = Astro.props;
const oeuvre = getOeuvre(getItemIdFromSlug(id));
const {
	annee,
	opus,
	titre,
	editeur,
	commentaire,
	texte,
	creation,
	duree,
	ecouter,
} = oeuvre;

const concerts = getConcerts().filter((concert) =>
	concert.oeuvres?.includes(titre)
);

const disques = getDisques().filter((disque) =>
	disque.oeuvres?.includes(titre)
);

const editeurItem = editeur && getEditeurByTitle(editeur);
---

<PageLayout sectionId={SectionId.CATALOGUE} hasSidebar={true}>
	<div slot="page-heading">
		<h3 class="subheading opus">Opus {opus}</h3>
		<h2 class="title">
			{titre}
		</h2>
	</div>
	<main slot="page-content">
		<table class="infos">
			<tbody>
				{
					editeurItem && (
						<tr>
							<th>Éditeur</th>
							<td>
								<a href={getPath(editeurItem)}>{editeur}</a>
							</td>
						</tr>
					)
				}

				<Field label="Instruments"
					><Instruments oeuvre={oeuvre} /></Field
				>
				{annee && <Field label="Année">{annee}</Field>}
				{texte && <Field label="Texte">{texte}</Field>}
				{creation && <Field label="Création">{creation}</Field>}
				{duree && <Field label="Durée">{duree}</Field>}
				{
					commentaire && (
						<Field>
							<div set:html={commentaire} />
						</Field>
					)
				}
			</tbody>
		</table>
	</main>

	{
		ecouter && ecouter.length > 0 && (
			<div slot="page-sidebar">
				<h4>
					<T k="ecouter" />
				</h4>
				<ul class="items-list">
					{ecouter.map((service) => (
						<li>
							<a
								href={service.url}
								target="_blank"
								class="link-heading"
							>
								<T k={service.id} />
							</a>
						</li>
					))}
				</ul>
			</div>
		)
	}

	{
		disques && disques.length > 0 && (
			<SidebarBlock
				k="disques"
				items={disques.map((disque) => {
					const { titre, maison } = disque;
					return {
						label: titre,
						url: getPath(disque),
						heading: maison,
					};
				})}
				slot="page-sidebar"
			/>
		)
	}
	{
		concerts && concerts.length > 0 && (
			<SidebarBlock
				k="concerts"
				items={concerts.map((concert) => {
					const { titre, annee } = concert;
					return {
						label: titre,
						url: getPath(concert),
						heading: String(annee),
					};
				})}
				slot="page-sidebar"
			/>
		)
	}
</PageLayout>

<style></style>
