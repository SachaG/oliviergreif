---
import {
	capitalizeFirstLetter,
	convertTitle,
	getConcerts,
	getDisques,
	getEditeur,
	getOeuvre,
	getPath,
} from "../../../helpers";
import Field from "../../Field.astro";
import Instruments from "./Instruments.astro";
const { id } = Astro.props;
const oeuvre = getOeuvre(id);
const {
	date_comp,
	opus,
	titre,
	editeur,
	commentaire,
	formation,
	instruments = [],
	texte,
	creation,
	duree,
} = oeuvre;

const concerts = getConcerts().filter((concert) =>
	concert.oeuvres?.includes(titre),
);

const disques = getDisques().filter((disque) =>
	disque.oeuvres?.includes(titre),
);

const editeurItem = editeur && getEditeur(convertTitle(editeur));
const className = instruments
	?.map((i) => `instrument-${convertTitle(i)}`)
	.join(" ");
---

<div class={`visible ${className}`}>
	<div class="opus">Opus {opus}</div>
	<h3>
		<a href={getPath(oeuvre)}>{titre}</a>
	</h3>
	<main>
		<table class="infos">
			{
				editeurItem && (
					<Field label="Éditeur">
						<a href={getPath(editeurItem)}>{editeur}</a>
					</Field>
				)
			}
			<Field label="Formation"><Instruments oeuvre={oeuvre} /></Field>
			{texte && <Field label="Texte">{texte}</Field>}
			{creation && <Field label="Création">{creation}</Field>}
			{duree && <Field label="Durée">{duree}</Field>}
		</table>
	</main>

	<style type="text/scss">
		.opus {
			text-transform: uppercase;
			color: var(--textSecondaryColor);
			margin-bottom: var(--quarterSpacing);
		}
		.infos {
			th,
			td {
				text-align: left;
				vertical-align: top;
				padding-bottom: var(--quarterSpacing);
			}
			th {
				min-width: 200px;
			}
			tr {
			}
		}
		.visible {
			display: block;
		}
		.hidden {
			display: none;
		}
	</style>
</div>
