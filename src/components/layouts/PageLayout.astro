---
import { getSection2 } from "../../helpers";
import T from "../T.astro";
const { sectionId, hasSidebar = false } = Astro.props;

const defaultSlotContent = await Astro.slots.render('page-heading') || '';
const hasContent = defaultSlotContent.trim().length > 0;
---

<section class={`section section-${hasSidebar ? 'withSidebar' : 'noSidebar'}`} style={`view-transition-name: section-${sectionId}; `}>
	<div class="page-heading">
        <a class="home-link" href="/"><span class="arrow">‚Üê</span>
        <span class="visually-hidden"><T k="retour_accueil"/></span></a>
        <div class="page-heading-content">
        {hasContent ? <slot name="page-heading"/>:<h2
            style={`view-transition-name: heading-${sectionId}`}
        >
            <T k={sectionId} />
            
        </h2>}
        </div>
    </div>
	<div class="page-content grid">
		<main class="page-main">
    <slot name="page-subheading" />
            <slot name="page-content" /></main>
		<div class="page-sidebar">
			<div class="sidebar-contents">
				<slot name="page-sidebar" />
			</div>
		</div>
	</div>
</section>

<style type="text/scss" is:global>
    .page-heading {
        display: grid;
        grid-template-columns: min-content 1fr;
		border-bottom: var(--border);

    }
    .home-link {
        display: grid;
        place-items: center;
        font-size: 8rem;
        text-decoration: none;
		border-right: var(--border);
        vertical-align: middle;
        aspect-ratio: 1/1;
        &:hover {
            background-color: var(--textColor);
            color: var(--bgColor);
        }
        .arrow {
            text-box-edge: cap alphabetic;
            text-box-trim: trim-both;
        }
    }

	.page-heading-content {
		// position: sticky;
		// top: 10px;
		// background-color: var(--bgColor);
		z-index: 100;
		padding: var(--doubleSpacing);
        display: flex;
        flex-direction: column;
        justify-content: center;
		a {
			color: var(--textColor);
            text-decoration: none;
		}
        h2 {
            font-size: 2rem;
        }
	}
	.page-content {
		display: grid;
		grid-template-columns: 3fr 1fr;
	}
	.heading {
		margin-bottom: var(--spacing);
	}
	.page-main {
		padding: var(--doubleSpacing);
		display: flex;
		flex-direction: column;
		gap: var(--doubleSpacing);
        .section-withSidebar & {
            border-right: var(--border);
            padding-right: var(--doubleSpacing);
        }
		.subgrid-layout {
			padding-bottom: var(--doubleSpacing);
			border-bottom: var(--border);
		}
	}

	.page-sidebar {
		padding: var(--doubleSpacing);
		position: sticky;
		top: 10px;
	}

    .sidebar-contents {
        display: flex;
        flex-direction: column;
        gap: var(--doubleSpacing);
    }

</style>
